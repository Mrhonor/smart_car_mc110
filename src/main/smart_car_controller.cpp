#include "smart_car_controller.h"
#include "smart_car_public.h"

#include "geometry_msgs/Pose.h"
#include "sensor_msgs/Imu.h"
#include "geometry_msgs/TwistWithCovarianceStamped.h"
#include "tf/transform_datatypes.h"


#include <thread>
// simulation
#include <nlohmann/json.hpp>


using namespace std;
using json = nlohmann::json;
smart_car_controller::smart_car_controller(ros::NodeHandle &n):
    imu_seq(0),
    encoder_seq(0)
{
    ROS_INFO("controller init");
    comUart = new smart_car_communicator();
    ControlState.Init();

    state_pub_ = n.advertise<std_msgs::Float64MultiArray>("/EKF/State", 10);
    reference_path_pub_ = n.advertise<std_msgs::Float64MultiArray>("/RefPath", 10);

    encoder_pub = n.advertise<geometry_msgs::TwistWithCovarianceStamped>("/smart_car_mc110/encoder", 10);
    imu_pub = n.advertise<sensor_msgs::Imu>("/smart_car_mc110/imu_data", 10);

    control_sub_ = n.subscribe("/MPCC/Control", 10, &smart_car_controller::mpccControlCallback, this);
    ekf_sub = n.subscribe("/odometry/filtered", 10, &smart_car_controller::ekfCallback, this);

    cmd_vel_sub  = n.subscribe("cmd_vel",     100, &smart_car_controller::Cmd_Vel_Callback, this); 

    ifstream iConfig("/home/firefly/robot_ws/src/MPCC/Params/config.json");
    json jsonConfig;
    iConfig >> jsonConfig;

    PathToJson json_paths {jsonConfig["model_path"],
                           jsonConfig["cost_path"],
                           jsonConfig["bounds_path"],
                           jsonConfig["track_path"],
                           jsonConfig["normalization_path"]};

    integrator = new Integrator(jsonConfig["Ts"],json_paths);
    // x0 = {0, 0,0,jsonConfig["v0"],0,0,0,0.5,0,jsonConfig["v0"]};
    x0 = {0, 0,0,0,0,0,0,0,0,0};
    Ts = jsonConfig["Ts"];
    TempSimuEnd = 0;

    u0.setZero();

    LastTxTime = ros::Time::now();

    // 开启线程
    thread mainThread(&smart_car_controller::controllerThreadHandle, this);
    mainThread.detach();
}

smart_car_controller::~smart_car_controller(){
    delete comUart;
    delete integrator;
}

void smart_car_controller::controllerThreadHandle(){
    SRealDataStru data;
    data.Init();
    trackPublish();
    while (ros::ok())
    {
        
        if(comUart->uartRxHandle(data)){
            ros::Time timeStamp = ros::Time::now();
            SensorInfoPublish(data, timeStamp);
        }
        

        ros::Time curTime = ros::Time::now();
        double dt = (curTime.toSec() - LastTxTime.toSec());
        x0.D += u0.dD * dt;
        x0.delta += u0.dDelta * dt;
        x0.vs += u0.dVs * dt;

        if(x0.D > 0.05)       ControlState.TargetVelocity = x0.D * 0.75 + 0.25;
        else if(x0.D < -0.05) ControlState.TargetVelocity = x0.D * 0.75 - 0.25;
        else                  ControlState.TargetVelocity = 0;

        ControlState.TargetAngle = x0.delta;

        // 防止跑出去
        if(x0.X < 1.5 && x0.Y < 1.1) comUart->uartTxHandle(ControlState);
            
        LastTxTime = curTime;

        ros::Duration(0.025).sleep();
    }
    // ros::Duration(1).sleep();
    // trackPublish();
}

void smart_car_controller::trackPublish(){
    
    vector<double> x_center = {0,0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1,1.1,1.2,1.2,1.202,1.204,1.206,1.208,1.21,1.212,1.214,1.216,1.218,1.22,1.222,1.224,1.226,1.228,1.23,1.232,1.234,1.236,1.238,1.24,1.242,1.244,1.246,1.248,1.25,1.252,1.254,1.256,1.258,1.26,1.262,1.264,1.266,1.268,1.27,1.272,1.274,1.276,1.278,1.28,1.282,1.284,1.286,1.288,1.29,1.292,1.294,1.296,1.298,1.3,1.302,1.304,1.306,1.308,1.31,1.312,1.314,1.316,1.318,1.32,1.322,1.324,1.326,1.328,1.33,1.332,1.334,1.336,1.338,1.34,1.342,1.344,1.346,1.348,1.35,1.352,1.354,1.356,1.358,1.36,1.362,1.364,1.366,1.368,1.37,1.372,1.374,1.376,1.378,1.38,1.382,1.384,1.386,1.388,1.39,1.392,1.394,1.396,1.398,1.4,1.402,1.404,1.406,1.408,1.41,1.412,1.414,1.416,1.418,1.42,1.422,1.424,1.426,1.428,1.43,1.432,1.434,1.436,1.438,1.44,1.442,1.444,1.446,1.448,1.45,1.452,1.454,1.456,1.458,1.46,1.462,1.464,1.466,1.468,1.47,1.472,1.474,1.476,1.478,1.48,1.482,1.484,1.486,1.488,1.49,1.492,1.494,1.496,1.498,1.5,1.502,1.504,1.506,1.508,1.51,1.512,1.514,1.516,1.518,1.52,1.522,1.524,1.526,1.528,1.53,1.532,1.534,1.536,1.538,1.54,1.542,1.544,1.546,1.548,1.55,1.552,1.554,1.556,1.558,1.56,1.562,1.564,1.566,1.568,1.57,1.572,1.574,1.576,1.578,1.58,1.582,1.584,1.586,1.588,1.59,1.592,1.594,1.596,1.598,1.6,1.602,1.604,1.606,1.608,1.61,1.612,1.614,1.616,1.618,1.62,1.622,1.624,1.626,1.628,1.63,1.632,1.634,1.636,1.638,1.64,1.642,1.644,1.646,1.648,1.65,1.652,1.654,1.656,1.658,1.66,1.662,1.664,1.666,1.668,1.67,1.672,1.674,1.676,1.678,1.68,1.682,1.684,1.686,1.688,1.69,1.692,1.694,1.696,1.698,1.7,1.7,1.7,1.7,1.7,1.7,1.7,1.7,1.7,1.7,1.7,1.7,1.7,1.7};
    vector<double> y_center = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.00001600014965e-06,1.60002560081751e-05,3.60012960933243e-05,6.40040965244060e-05,0.000100010002000495,0.000144020741974116,0.000196038431066470,0.000256065569575914,0.000324105044079592,0.000400160128128158,0.000484234483034585,0.000576332158757187,0.000676457594877666,0.000784615621673757,0.000900811461288786,0.00102505072899700,0.00115733943456681,0.00129768398372160,0.00144609117970002,0.00160256822491550,0.00176712272271717,0.00193976267925183,0.00212049650542956,0.00230933301899261,0.00250628144669002,0.00271135142655832,0.00292455301031014,0.00314589666583209,0.00337539327979330,0.00361305416036578,0.00385889104005904,0.00411291607867020,0.00437514186635069,0.00464558142679300,0.00492424822053750,0.00521115614840306,0.00550631955504227,0.00580975323262400,0.00612147242464572,0.00644149282987738,0.00676983060643988,0.00710650237602040,0.00745152522822690,0.00780491672508554,0.00816669490568250,0.00853687829095462,0.00891548588863039,0.00930253719832624,0.00969805221679981,0.0101020514433644,0.0105145558854687,0.0109355870644440,0.0113651670214249,0.0118033183234446,0.0122500640697121,0.0127054278980732,0.0131694339916608,0.0136421070857388,0.0141234724747449,0.0146135560195361,0.0151123841548436,0.0156199838969406,0.0161363828515312,0.0166616092218620,0.0171956918170676,0.0177386600607509,0.0182905439998090,0.0188513743135079,0.0194211823228161,0.020,0.0205878599784941,0.0211847955630481,0.0217908407401631,0.0224060301888224,0.0230303992915271,0.0236639841456454,0.0243068215750829,0.0249589491422872,0.0256204051605929,0.0262912287069195,0.0269714596348334,0.0276611385879836,0.0283603070139240,0.0290690071783340,0.0297872821796501,0.0305151759641212,0.0312527333413025,0.032,0.0327570225246825,0.0335238484123759,0.0343005260900545,0.0350871049325476,0.0358836352809783,0.0366901684617517,0.0375067568061129,0.0383334536702925,0.0391703134562618,0.0400173916331184,0.0408747447591235,0.0417424305044160,0.0426205076744258,0.0435090362340126,0.0444080773323565,0.0453176933286275,0.0462379478184629,0.0471689056612830,0.0481106330084763,0.0490631973324865,0.0500266674568369,0.0510011135871271,0.0519866073430393,0.0529832217913963,0.0539910314803075,0.0550101124744518,0.0560405423915377,0.0570824004399915,0.0581357674579215,0.0592007259534109,0.0602773601461940,0.0613657560107738,0.0624660013210402,0.0635781856964526,0.0647024006498543,0.0658387396369869,0.0669872981077807,0.0681481735594950,0.0693214655917944,0.0705072759638413,0.0717057086535007,0.0729168699187475,0.0741408683613794,0.0753778149931401,0.0766278233043650,0.0778910093352666,0.0791674917499838,0.0804573919135269,0.0817608339717573,0.0830779449345478,0.0844088547622797,0.0857536964558405,0.0871126061502967,0.0884857232124261,0.0898731903423041,0.0912751536791530,0.0926917629116740,0.0941231713930937,0.0955695362611763,0.0970310185634631,0.0985077833880214,0.10,0.101507841984312,0.103031487394781,0.104571118910113,0.106126923997083,0.107699095081339,0.109287829726281,0.110893330820455,0.112515806774005,0.114155471724686,0.115812545754029,0.117487255114290,0.119179832466819,0.120890517132583,0.122619555355607,0.124367200580141,0.126133713742467,0.127919363578270,0.129724426946632,0.131549189171743,0.133393944403533,0.135258995998531,0.137144656922349,0.139051250175319,0.140979109242930,0.142928578572858,0.144900014080541,0.146893783685419,0.148910267880133,0.150949860335223,0.153012968542051,0.155100014496956,0.157211435429943,0.159347684581478,0.161509232031360,0.163696565583995,0.165910191714863,0.168150636583404,0.170418447118168,0.172714192180596,0.175038463814562,0.177391878589518,0.179775079045993,0.182188735253138,0.184633546489168,0.187110243056760,0.189619588246938,0.192162380466584,0.194739455546577,0.197351689249717,0.20,0.202685351857666,0.205408757767648,0.208171283112851,0.210974049607998,0.213818239574916,0.216705100645987,0.219635950949484,0.222612184838627,0.225635279235832,0.228706800674989,0.231828413138155,0.235001886799170,0.238229107806082,0.241512089257544,0.244852983556538,0.248254096359047,0.251717902377155,0.255247063347546,0.258844448539952,0.262513158259242,0.266256550893934,0.270078274188801,0.273982301577952,0.277972974617953,0.282055052822966,0.286233772545802,0.290514916998847,0.294904900107292,0.299410867692190,0.304040820577346,0.308803765727460,0.313709903644880,0.318770863269727,0.324,0.329412778907680,0.335027274981590,0.340864837323739,0.346950988242328,0.353316667613529,0.36,0.367048881163038,0.374524902869135,0.382509574858204,0.391114739289470,0.400501256289338,0.410915770194720,0.422773061694769,0.436881064647762,0.455323384192623,0.50,0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.95,1,1.05,1.1};
    vector<double> x_in = {0,0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1,1.1,1.2,1.2,1.202,1.204,1.206,1.208,1.21,1.212,1.214,1.216,1.218,1.22,1.222,1.224,1.226,1.228,1.23,1.232,1.234,1.236,1.238,1.24,1.242,1.244,1.246,1.248,1.25,1.252,1.254,1.256,1.258,1.26,1.262,1.264,1.266,1.268,1.27,1.272,1.274,1.276,1.278,1.28,1.282,1.284,1.286,1.288,1.29,1.292,1.294,1.296,1.298,1.3,1.302,1.304,1.306,1.308,1.31,1.312,1.314,1.316,1.318,1.32,1.322,1.324,1.326,1.328,1.33,1.332,1.334,1.336,1.338,1.34,1.342,1.344,1.346,1.348,1.35,1.352,1.354,1.356,1.358,1.36,1.362,1.364,1.366,1.368,1.37,1.372,1.374,1.376,1.378,1.38,1.382,1.384,1.386,1.388,1.39,1.392,1.394,1.396,1.398,1.4,1.402,1.404,1.406,1.408,1.41,1.412,1.414,1.416,1.418,1.42,1.422,1.424,1.426,1.428,1.43,1.432,1.434,1.436,1.438,1.44,1.442,1.444,1.446,1.448,1.45,1.452,1.454,1.456,1.458,1.46,1.462,1.464,1.466,1.468,1.47,1.472,1.474,1.476,1.478,1.48,1.482,1.484,1.486,1.488,1.49,1.492,1.494,1.496,1.498,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5};
    vector<double> y_in = {0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.200006666740742,0.200026667851957,0.200060006001200,0.200106685636375,0.200166712988701,0.200240096076877,0.200326844712443,0.200426970506356,0.200540486876773,0.200667409058085,0.200807754111174,0.200961540934949,0.201128790279157,0.201309524758489,0.201503768868014,0.201711548999965,0.201932893461892,0.202167832496219,0.202416398301250,0.202678625053630,0.202954548932323,0.203244208144138,0.203547642950845,0.203864895697926,0.204196010845019,0.204541034998090,0.204900016943410,0.205273007683382,0.205660060474288,0.206061230866019,0.206476576743865,0.206906158372442,0.207350038441827,0.207808282116005,0.208280957083704,0.208768133611722,0.209269884600855,0.209786285644527,0.210317415090241,0.210863354103981,0.211424186737696,0.212,0.212590883930241,0.213196931676106,0.213818239574916,0.214454907238804,0.215107037643960,0.215774737224152,0.216458115968734,0.217157287525381,0.217872369307790,0.218603482608615,0.219350752717917,0.220114309047426,0.220894285260943,0.221690819411217,0.222504054083668,0.223334136547351,0.224181218913577,0.225045458302650,0.225927017019189,0.226826062736578,0.227742768691078,0.228677313886214,0.229629883308085,0.230600668152276,0.231589866063146,0.232597681386268,0.233624325434923,0.234670016771568,0.235734981505308,0.236819453606464,0.237923675239445,0.239047897115199,0.240192378864669,0.241357389434765,0.242543207508522,0.243750121951248,0.244978432284640,0.246228449191010,0.247500495049990,0.248794904510279,0.250112025099246,0.251452217873504,0.252815858113835,0.254203336068205,0.255615057747005,0.257051445775037,0.258512940305283,0.26,0.261513103085306,0.263052748486082,0.264619457048804,0.266213772860761,0.267836264675122,0.269487527452417,0.271168184030280,0.272878886934746,0.274620320348085,0.276393202250021,0.278198286751432,0.280036366642120,0.281908276177201,0.283814894130053,0.285757147143715,0.287736013417254,0.289752526769048,0.291807781125230,0.293902935489124,0.296039219456289,0.298217939350397,0.300440485067737,0.302708337733193,0.305023078288737,0.307386397157418,0.309800105152500,0.312266145834056,0.314786609555356,0.317363749490962,0.32,0.322697997755243,0.325460606165829,0.328290943744950,0.331192417231927,0.334168760482230,0.337224080404994,0.340362911577541,0.343590281631863,0.346911790133923,0.350333704529042,0.353863077902948,0.357507894955545,0.361277254929121,0.365181603629178,0.369233031693780,0.373445663843549,0.377836175567396,0.382424492346408,0.387234757127917,0.392296703857310,0.397647667344608,0.403335632211244,0.409424065006206,0.416,0.423188542521314,0.431181397863659,0.440300753773603,0.451173777537066,0.465416767068419,0.50,0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.95,1.0,1.05,1.1};
    vector<double> x_out = {0,0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1,1.1,1.2,1.2,1.202,1.204,1.206,1.208,1.21,1.212,1.214,1.216,1.218,1.22,1.222,1.224,1.226,1.228,1.23,1.232,1.234,1.236,1.238,1.24,1.242,1.244,1.246,1.248,1.25,1.252,1.254,1.256,1.258,1.26,1.262,1.264,1.266,1.268,1.27,1.272,1.274,1.276,1.278,1.28,1.282,1.284,1.286,1.288,1.29,1.292,1.294,1.296,1.298,1.3,1.302,1.304,1.306,1.308,1.31,1.312,1.314,1.316,1.318,1.32,1.322,1.324,1.326,1.328,1.33,1.332,1.334,1.336,1.338,1.34,1.342,1.344,1.346,1.348,1.35,1.352,1.354,1.356,1.358,1.36,1.362,1.364,1.366,1.368,1.37,1.372,1.374,1.376,1.378,1.38,1.382,1.384,1.386,1.388,1.39,1.392,1.394,1.396,1.398,1.4,1.402,1.404,1.406,1.408,1.41,1.412,1.414,1.416,1.418,1.42,1.422,1.424,1.426,1.428,1.43,1.432,1.434,1.436,1.438,1.44,1.442,1.444,1.446,1.448,1.45,1.452,1.454,1.456,1.458,1.46,1.462,1.464,1.466,1.468,1.47,1.472,1.474,1.476,1.478,1.48,1.482,1.484,1.486,1.488,1.49,1.492,1.494,1.496,1.498,1.5,1.502,1.504,1.506,1.508,1.51,1.512,1.514,1.516,1.518,1.52,1.522,1.524,1.526,1.528,1.53,1.532,1.534,1.536,1.538,1.54,1.542,1.544,1.546,1.548,1.55,1.552,1.554,1.556,1.558,1.56,1.562,1.564,1.566,1.568,1.57,1.572,1.574,1.576,1.578,1.58,1.582,1.584,1.586,1.588,1.59,1.592,1.594,1.596,1.598,1.6,1.602,1.604,1.606,1.608,1.61,1.612,1.614,1.616,1.618,1.62,1.622,1.624,1.626,1.628,1.63,1.632,1.634,1.636,1.638,1.64,1.642,1.644,1.646,1.648,1.65,1.652,1.654,1.656,1.658,1.66,1.662,1.664,1.666,1.668,1.67,1.672,1.674,1.676,1.678,1.68,1.682,1.684,1.686,1.688,1.69,1.692,1.694,1.696,1.698,1.7,1.702,1.704,1.706,1.708,1.71,1.712,1.714,1.716,1.718,1.72,1.722,1.724,1.726,1.728,1.73,1.732,1.734,1.736,1.738,1.74,1.742,1.744,1.746,1.748,1.75,1.752,1.754,1.756,1.758,1.76,1.762,1.764,1.766,1.768,1.77,1.772,1.774,1.776,1.778,1.78,1.782,1.784,1.786,1.788,1.79,1.792,1.794,1.796,1.798,1.8,1.802,1.804,1.806,1.808,1.81,1.812,1.814,1.816,1.818,1.82,1.822,1.824,1.826,1.828,1.83,1.832,1.834,1.836,1.838,1.84,1.842,1.844,1.846,1.848,1.85,1.852,1.854,1.856,1.858,1.86,1.862,1.864,1.866,1.868,1.87,1.872,1.874,1.876,1.878,1.88,1.882,1.884,1.886,1.888,1.89,1.892,1.894,1.896,1.898,1.9,1.9,1.9,1.9,1.9,1.9,1.9,1.9,1.9,1.9,1.9,1.9,1.9,1.9};
    vector<double> y_out = {-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.20,-0.199997142851312,-0.199988571335275,-0.199974285241965,-0.199954284221477,-0.199928567783885,-0.199897135299181,-0.199859985997199,-0.199817118967520,-0.199768533159358,-0.199714227381436,-0.199654200301835,-0.199588450447833,-0.199516976205724,-0.199439775820621,-0.199356847396235,-0.199268188894647,-0.199173798136057,-0.199073672798511,-0.198967810417619,-0.198856208386246,-0.198738863954196,-0.198615774227866,-0.198486936169890,-0.198352346598764,-0.198212002188447,-0.198065899467951,-0.197914034820908,-0.197756404485118,-0.197593004552081,-0.197423830966508,-0.197248879525812,-0.197068145879583,-0.196881625529042,-0.196689313826472,-0.196491205974634,-0.196287297026163,-0.196077581882939,-0.195862055295444,-0.195640711862093,-0.195413546028548,-0.195180552087010,-0.194941724175488,-0.194697056277051,-0.194446542219054,-0.194190175672344,-0.193927950150446,-0.193659859008722,-0.193385895443511,-0.193106052491248,-0.192820323027551,-0.192528699766299,-0.192231175258670,-0.191927741892172,-0.191618391889632,-0.191303117308175,-0.190981910038172,-0.190654761802161,-0.190321664153748,-0.189982608476475,-0.189637585982667,-0.189286587712252,-0.188929604531552,-0.188566627132045,-0.188197646029104,-0.187822651560706,-0.187441633886107,-0.187054582984496,-0.186661488653616,-0.186262340508351,-0.185857127979290,-0.185445840311253,-0.185028466561792,-0.184604995599652,-0.184175416103210,-0.183739716558867,-0.183297885259423,-0.182849910302403,-0.182395779588356,-0.181935480819117,-0.181469001496033,-0.180996328918152,-0.180517450180376,-0.180032352171571,-0.179541021572649,-0.179043444854598,-0.178539608276481,-0.178029497883389,-0.177513099504356,-0.176990398750233,-0.176461381011511,-0.175926031456105,-0.175384335027102,-0.174836276440442,-0.174281840182575,-0.173721010508059,-0.173153771437106,-0.172580106753092,-0.172,-0.171413434479829,-0.170820393249937,-0.170220859120335,-0.169614814650931,-0.169002242148709,-0.168383123664863,-0.167757440991862,-0.167125175660460,-0.166486308936650,-0.165840821818548,-0.165188695033221,-0.164529909033446,-0.163864443994405,-0.163192279810313,-0.162513396090977,-0.161827772158286,-0.161135387042624,-0.160436219479217,-0.159730247904399,-0.159017450451807,-0.158297804948490,-0.157571288910944,-0.156837879541063,-0.156097553722006,-0.155350288013975,-0.154596058649913,-0.153834841531101,-0.153066612222674,-0.152291345949032,-0.151509017589166,-0.150719601671872,-0.149923072370877,-0.149119403499849,-0.148308568507312,-0.147490540471442,-0.146665292094759,-0.145832795698701,-0.144993023218081,-0.144145946195425,-0.143291535775188,-0.142429762697838,-0.141560597293818,-0.140684009477371,-0.139799968740231,-0.138908444145169,-0.138009404319403,-0.137102817447859,-0.136188651266273,-0.135266873054152,-0.134337449627562,-0.133400347331765,-0.132455532033676,-0.131502969114160,-0.130542623460143,-0.129574459456544,-0.128598440978022,-0.127614531380528,-0.126622693492663,-0.125622889606830,-0.124615081470180,-0.123599230275343,-0.122575296650935,-0.121543240651847,-0.120503021749290,-0.119454598820608,-0.118397930138839,-0.117332973362026,-0.116259685522264,-0.115178023014477,-0.114087941584917,-0.112989396319382,-0.111882341631134,-0.110766731248518,-0.109642518202266,-0.108509654812477,-0.107368092675274,-0.106217782649107,-0.105058674840713,-0.103890718590707,-0.102713862458796,-0.101528054208613,-0.100333240792145,-0.0991293683337515,-0.0979163821137534,-0.0966942265515899,-0.0954628451885139,-0.0942221806698232,-0.0929721747266056,-0.0917127681569835,-0.0904439008068422,-0.0891655115500228,-0.0878775382679629,-0.0865799178287644,-0.0852725860656726,-0.0839554777549398,-0.0826285265930601,-0.0812916651733449,-0.0799448249618235,-0.0785879362724391,-0.0772209282415183,-0.0758437288014866,-0.0744562646538030,-0.0730584612410850,-0.0716502427183952,-0.0702315319236565,-0.0688022503471659,-0.0673623181001714,-0.0659116538824767,-0.0644501749490384,-0.0629777970755153,-0.0614944345227297,-0.061,-0.0584944046272981,-0.0569775578961868,-0.0554493676294897,-0.0539097399396403,-0.0523585791856591,-0.0507957879287023,-0.0492212668861249,-0.0476349148839946,-0.0460366288079950,-0.0444263035526480,-0.0428038319687878,-0.0411691048092084,-0.0395220106724099,-0.0378624359443593,-0.0361902647381804,-0.0345053788316821,-0.0328076576026287,-0.0310969779616526,-0.0293732142827025,-0.0276362383309168,-0.0258859191878026,-0.0241221231735979,-0.0223447137666849,-0.0205535515199181,-0.0187484939737175,-0.0169293955657774,-0.0150961075372246,-0.0132484778350541,-0.0113863510106620,-0.00950956811427983,-0.00761796658510816,-0.00571138013693140,-0.00378963863898596,-0.00185256799183564,0.000100010002000495,0.00206827777294605,0.00405242212507984,0.00605263438297393,0.00806911054498721,0.0101020514433644,0.0121516629115151,0.0142181559588708,0.0163017469537439,0.0184026578146428,0.0205211162105259,0.0226573557705115,0.0248116163035969,0.0269841440289765,0.0291751918175934,0.0313850194456008,0.0336138938604624,0.0358620894604709,0.0381298883885211,0.0404175808410422,0.0427254653930530,0.0450538493403863,0.0474030490602042,0.0497733903910166,0.0521652090335098,0.0545788509735983,0.0570146729292267,0.0594730428225760,0.0619543402794636,0.0644589571578817,0.0669872981077808,0.0695397811643915,0.0721168383775778,0.0747189164799353,0.0773464775966017,0.0799999999999998,0.0826799789130649,0.0853869273648018,0.0881213771024285,0.0908838795647375,0.0936750069217992,0.0964953531866081,0.0993455354048830,0.102226194929832,0.105137998789451,0.108081641154691,0.111057844917782,0.114067363390967,0.117110982137121,0.120189520944985,0.123303835963253,0.126454822009439,0.129643415071366,0.132870595021319,0.136137388565409,0.139444872453601,0.142794176979154,0.146186489800064,0.149623060119533,0.153105203267619,0.156634305732212,0.160211830694475,0.163839324132045,0.167518421562938,0.171250855514421,0.175038463814561,0.178883198820118,0.182787137713490,0.186752494024294,0.190781630558597,0.194877073952153,0.199041531104373,0.203277907799234,0.207589329880047,0.211979167420132,0.216451062424843,0.221008960717373,0.225657148808284,0.230400296736068,0.235243508106033,0.240192378864668,0.245253066750549,0.250432373894369,0.255737845747647,0.261177890470752,0.266761924206188,0.272500549451213,0.278405776248567,0.284491299479580,0.290772850710047,0.297268650672867,0.304,0.310992063658692,0.318274932934391,0.325885095411105,0.333867522741638,0.342278726862861,0.351191398098094,0.360701758805073,0.370941873560786,0.382101738774484,0.394472752333817,0.408545093078610,0.425273833230922,0.447122783734390,0.499999992549419,0.50,0.55,0.60,0.65,0.70,0.75,0.80,0.85,0.90,0.95,1,1.05,1.1};


    std_msgs::Float64MultiArray ref_msg;
    std_msgs::MultiArrayDimension dim_msg;
    dim_msg.label = "X";
    dim_msg.size = x_center.size();
    ref_msg.layout.dim.push_back(dim_msg);
    for(auto i : x_center){
        ref_msg.data.push_back(i);
    }

    dim_msg.label = "Y";
    dim_msg.size = y_center.size();
    ref_msg.layout.dim.push_back(dim_msg);
    for(auto i : y_center){
        ref_msg.data.push_back(i);
    }
    dim_msg.label = "Xin";
    dim_msg.size = x_in.size();
    ref_msg.layout.dim.push_back(dim_msg);
    for(auto i : x_in){
        ref_msg.data.push_back(i);
    }
    dim_msg.label = "Yin";
    dim_msg.size = y_in.size();
    ref_msg.layout.dim.push_back(dim_msg);
    for(auto i : y_in){
        ref_msg.data.push_back(i);
    }
    dim_msg.label = "Xout";
    dim_msg.size = x_out.size();
    ref_msg.layout.dim.push_back(dim_msg);
    for(auto i : x_out){
        ref_msg.data.push_back(i);
    }
    dim_msg.label = "Yout";
    dim_msg.size = y_out.size();
    ref_msg.layout.dim.push_back(dim_msg);
    for(auto i : y_out){
        ref_msg.data.push_back(i);
    }
    
    reference_path_pub_.publish(ref_msg);

    // ros::Duration(1).sleep();
    // statePublish();
    // nav_msgs::Odometry msg;
    // msg.header.seq = 0;
    // msg.header.stamp = ros::Time::now();
    // msg.header.frame_id = "odom";
    // msg.child_frame_id = "base_link";
    // msg.pose.pose.position.x = 2.5;
    // msg.pose.pose.position.y = 0;
    // msg.pose.pose.orientation.x = 0;
    // msg.pose.pose.orientation.y = 0;
    // msg.pose.pose.orientation.z = 0;
    // msg.pose.pose.orientation.w = 1;
    // msg.twist.twist.linear.x = 2;
    // msg.twist.twist.linear.y = 0;
    // msg.twist.twist.angular.z = 0;
    // ros::Duration(1).sleep();
    // state_pub_.publish(msg);
}

void smart_car_controller::statePublish(){
    std_msgs::Float64MultiArray state_msg;
    state_msg.data.push_back(x0.X);
    state_msg.data.push_back(x0.Y);
    state_msg.data.push_back(x0.phi);
    state_msg.data.push_back(x0.vx);
    state_msg.data.push_back(x0.vy);
    state_msg.data.push_back(x0.r);
    state_msg.data.push_back(x0.D);
    state_msg.data.push_back(x0.delta);
    state_msg.data.push_back(x0.vs);
    

    // temp for simulation
    TempSimuEnd++;
    state_msg.data.push_back(TempSimuEnd);

    state_pub_.publish(state_msg);
}

void smart_car_controller::mpccControlCallback(const std_msgs::Float64MultiArrayConstPtr& msg){
    // Input u0;
    u0.dD = msg->data[0];
    u0.dDelta = msg->data[1];
    u0.dVs = msg->data[2];
    // x0 = integrator->simTimeStep(x0, u0, Ts);
    // statePublish();
}

// 发布传感器数据
void smart_car_controller::SensorInfoPublish(const SRealDataStru& data, const ros::Time &timeStamp){
    ImuDataPublish(data.Gyro, timeStamp);
    encoderDataPublish(data.CarSpeed, timeStamp);
}

// 发布Imu数据
void smart_car_controller::ImuDataPublish(const int16 * gypo, const ros::Time &timeStamp){
    // 解包MPU9250数据
    // MPU9250数据给出int16位的数据，数据表示范围为MPU9250_ANGLEVEL_RANGE、MPU9250_ACC_RANGE
    double RollVel = gypo[0] / 32768.0 * MPU9250_ANGLEVEL_RANGE;
    double PitchVel = gypo[1] / 32768.0 * MPU9250_ANGLEVEL_RANGE;
    double YawVel = gypo[2] / 32768.0 * MPU9250_ANGLEVEL_RANGE;

    double XAcc = gypo[3] / 32768.0 * MPU9250_ACC_RANGE;
    double YAcc = gypo[4] / 32768.0 * MPU9250_ACC_RANGE;
    double ZAcc = gypo[5] / 32768.0 * MPU9250_ACC_RANGE;

    // 计算方向角，程序来源自MPU6050解包方式，不一定相同，有待测试
    double Roll = gypo[6] * 0.00549;
    double Pitch = gypo[7] * 0.00549;
    double Yaw = gypo[8] * 0.00549;

    double Quat_x = sin(Roll*PI/180.0/2)*cos(Yaw*PI/180.0/2)*cos(Pitch*PI/180.0/2)-cos(Roll*PI/180.0/2)*sin(Yaw*PI/180.0/2)*sin(Pitch*PI/180.0/2);
    double Quat_y = cos(Roll*PI/180.0/2)*sin(Yaw*PI/180.0/2)*cos(Pitch*PI/180.0/2)+sin(Roll*PI/180.0/2)*cos(Yaw*PI/180.0/2)*sin(Pitch*PI/180.0/2);
    double Quat_z = cos(Roll*PI/180.0/2)*cos(Yaw*PI/180.0/2)*sin(Pitch*PI/180.0/2)-sin(Roll*PI/180.0/2)*sin(Yaw*PI/180.0/2)*cos(Pitch*PI/180.0/2);
    double Quat_w = cos(Roll*PI/180.0/2)*cos(Yaw*PI/180.0/2)*cos(Pitch*PI/180.0/2)+sin(Roll*PI/180.0/2)*sin(Yaw*PI/180.0/2)*sin(Pitch*PI/180.0/2);

    // 发布数据
    sensor_msgs::Imu pub_msg;
    imu_seq++;
    pub_msg.header.seq = imu_seq;
    pub_msg.header.stamp = timeStamp;
    pub_msg.header.frame_id = "base_link";
    pub_msg.orientation.w = Quat_w;
    pub_msg.orientation.x = Quat_x;
    pub_msg.orientation.y = Quat_y;
    pub_msg.orientation.z = Quat_z;
    pub_msg.orientation_covariance = {1, 0, 0,
                                      0, 1, 0,
                                      0, 0, 1e-1

    };

    pub_msg.angular_velocity.x = RollVel;
    pub_msg.angular_velocity.y = PitchVel;
    pub_msg.angular_velocity.z = YawVel;
    pub_msg.angular_velocity_covariance = {1, 0, 0,
                                           0, 1, 0,
                                           0, 0, 1e-1

    };

    pub_msg.linear_acceleration.x = XAcc;
    pub_msg.linear_acceleration.y = YAcc;
    pub_msg.linear_acceleration.z = ZAcc;
    pub_msg.linear_acceleration_covariance = {1e-1, 0, 0,
                                              0, 1e-1, 0,
                                              0, 0, 1e-1

    };
    imu_pub.publish(pub_msg);
}

void smart_car_controller::encoderDataPublish(const int16 & vel, const ros::Time &timeStamp){
    double XVel = (double)vel / 1000.0;
    geometry_msgs::TwistWithCovarianceStamped pub_msg;
    encoder_seq++;
    pub_msg.header.seq = encoder_seq;
    pub_msg.header.stamp = timeStamp;
    pub_msg.header.frame_id = "base_link";
    pub_msg.twist.twist.linear.x = XVel;
    pub_msg.twist.covariance = {1e-1,0,0,0,0,0,
                                0,1,0,0,0,0,
                                0,0,1,0,0,0,
                                0,0,0,1,0,0,
                                0,0,0,0,1,0,
                                0,0,0,0,0,1

    };

    encoder_pub.publish(pub_msg);
}

void smart_car_controller::ekfCallback(const nav_msgs::OdometryConstPtr& msg){
    x0.X = msg->pose.pose.position.x;
    x0.Y = msg->pose.pose.position.y;

    tf::Quaternion quat;
    tf::quaternionMsgToTF(msg->pose.pose.orientation, quat);

    
    double roll, pitch, yaw;//定义存储r\p\y的容器
    tf::Matrix3x3(quat).getRPY(roll, pitch, yaw);//进行转换
    x0.phi = yaw;
    x0.vx = msg->twist.twist.linear.x;
    x0.vy = msg->twist.twist.linear.y;
    x0.r = msg->twist.twist.angular.z;
    statePublish();
}
void smart_car_controller::Cmd_Vel_Callback(const geometry_msgs::TwistConstPtr& msg){
    SCommandDataStru sendData;
    sendData.XVel = msg->linear.x;
    sendData.YVel = msg->linear.y;
    sendData.YawVel = msg->angular.z;
    comUart->uartTxHandle(sendData);
}